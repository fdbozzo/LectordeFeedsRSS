plugins {
    id 'com.android.application'
    id 'kotlin-android'
    //id 'kotlin-android-extensions'   // deprecated desde Kotlin 1.4.10
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    //id 'de.mannodermaus.android-junit5'
    //id 'com.google.firebase.crashlytics'
    id 'com.google.gms.google-services'
    id 'androidx.navigation.safeargs'  // 'androidx.navigation.safeargs.kotlin' ¿qué diferencia hay?
}

android {
    compileSdkVersion 30
    buildToolsVersion '30.0.3'

    defaultConfig {
        applicationId "com.blogspot.fdbozzo.lectorfeedsrss"
        minSdkVersion 22
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        //testInstrumentationRunnerArgument("runnerBuilder", "de.mannodermaus.junit5.AndroidJUnit5Builder")
        vectorDrawables.useSupportLibrary = true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"]
            }
        }

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        dataBinding true
        viewBinding true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    configurations.all {
        resolutionStrategy {
            exclude group: "org.jetbrains.kotlinx", module: "kotlinx-coroutines-debug"

        }
    }

    packagingOptions {
        //exclude 'META-INF/DEPENDENCIES'
        //exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.md'
        //exclude 'META-INF/LICENSE.txt'
        //exclude 'META-INF/license.txt'
        exclude 'META-INF/LICENSE-notice.md'
        //exclude 'META-INF/NOTICE'
        //exclude 'META-INF/NOTICE.txt'
        //exclude 'META-INF/notice.txt'
        //exclude 'META-INF/ASL2.0'
        //exclude("META-INF/*.kotlin_module")
    }

}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    //implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    // Support libraries
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation "androidx.activity:activity-ktx:1.1.0"
    implementation "androidx.fragment:fragment-ktx:1.2.5"
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"

    // 3rd party support libraries
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-simplexml:2.6.1'
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'org.simpleframework:simple-xml:2.7.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.0'
    //implementation 'com.github.faruktoptas:RetrofitRssConverterFactory:0.1.0'
    //implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.10"

    // Android KTX
    implementation 'androidx.core:core-ktx:1.3.2'

    // Android Jetpack Paging 3.0
    implementation "androidx.paging:paging-runtime-ktx:3.0.0-alpha11"

    // Room
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    kapt "androidx.room:room-compiler:$room_version"

    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    //implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate-ktx:$lifecycle_version"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"

    // Navigation KTX
    implementation "androidx.navigation:navigation-runtime-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"

    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:26.1.0')
    // Declare the dependency for the Firebase Authentication library
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-auth-ktx'
    //implementation 'com.google.firebase:firebase-auth:20.0.0'

    // Declare the dependencies for the Crashlytics and Analytics libraries
    //implementation 'com.google.firebase:firebase-crashlytics-ktx'

    //implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.annotation:annotation:1.1.0'
    //implementation 'com.google.android.gms:play-services-auth:18.1.0'
    //implementation 'com.google.gms:google-services:4.3.4'
    implementation 'androidx.preference:preference-ktx:1.1.1'

    /**
     * Testing libraries
     */
    testImplementation 'junit:junit:4.13.1'

    // Core library
    androidTestImplementation "androidx.test:core:$androidx_test_version"
    androidTestImplementation 'androidx.arch.core:core-testing:2.1.0'
    testImplementation 'org.robolectric:robolectric:4.4'

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation "androidx.test:rules:$androidx_test_version"
    androidTestImplementation "androidx.test:runner:$androidx_test_version"

    // Assertions
    androidTestImplementation "androidx.test.ext:junit:$androidx_test_ext_version"
    androidTestImplementation "androidx.test.ext:junit-ktx:$androidx_test_ext_version"

    // Junit 5 Testing
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit5_version"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit5_version"
    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:$junit5_version"
    //androidTestImplementation("de.mannodermaus.junit5:android-test-core:1.2.0")
    //androidTestRuntimeOnly("de.mannodermaus.junit5:android-test-runner:1.2.0")

    // Espresso Testing
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidx_test_espresso_version"

    // Kotest
    testImplementation "io.kotest:kotest-runner-junit5:$kotest_version"
    testImplementation "io.kotest:kotest-assertions-core:$kotest_version"
    testImplementation "io.kotest:kotest-property:$kotest_version"

    androidTestImplementation "org.jetbrains.kotlin:kotlin-test-junit5:$kotlin_version"
    androidTestImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"

    // Coroutines Testing
    androidTestImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.1'

    // Room Testing
    androidTestImplementation "androidx.room:room-testing:$room_version"

    /** Tests unitarios (sin instrumentación) **/
    // Mokito Testing
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
    // AndroidX
    testImplementation 'androidx.test:core:1.3.0'
    testImplementation 'androidx.test.ext:truth:1.3.0'
    // Truth
    testImplementation 'com.google.truth:truth:1.0'
    // Turbine
    testImplementation 'app.cash.turbine:turbine:0.3.0'

    // Logging
    implementation 'com.jakewharton.timber:timber:4.7.1'
}

//apply plugin: 'com.google.gms.google-services'
